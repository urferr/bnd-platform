apply plugin: 'groovy'
apply plugin: 'signing'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


repositories {
	jcenter()
}

group = 'org.standardout'
version = '1.8.0'

sourceCompatibility = '11'
targetCompatibility = '11'

jar {
	// include license into jar
	into 'META-INF', {
		from 'LICENSE'
	}
}

dependencies {
	implementation  gradleApi()
	implementation  'biz.aQute.bnd:biz.aQute.bndlib:6.4.1'
	implementation  'org.osgi:osgi.core:8.0.0'
	implementation  'commons-io:commons-io:2.9.0'
	implementation  'de.undercouch:gradle-download-task:5.4.0'
	implementation  localGroovy()
}

// package groovydoc into a jar file
task packageJavadoc(type: Jar, dependsOn: 'groovydoc') {
	from groovydoc.destinationDir
	classifier = 'javadoc'
}

// package source into a jar file
task packageSources(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

// define artifacts for upload
artifacts {
	archives jar
	archives packageJavadoc
	archives packageSources
}

def configurePom(def pom) {
	// ensure correct artifact ID
	pom.artifactId = 'bnd-platform'
	
	// pom file details
	pom.project {
	   name 'bnd-platform'
	   packaging 'jar'
	   description 'Build OSGi bundles and Eclipse Update Sites from existing JARs, e.g. from Maven repositories (Plugin for Gradle)'
	   url 'https://github.com/stempler/bnd-platform'

	   scm {
		   url 'scm:git:https://github.com/stempler/bnd-platform.git'
		   connection 'scm:git:https://github.com/stempler/bnd-platform.git'
		   developerConnection 'scm:git:https://github.com/stempler/bnd-platform.git'
	   }

	   licenses {
		   license {
			   name 'The Apache Software License, Version 2.0'
			   url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
			   distribution 'repo'
		   }
	   }

	   developers {
		   developer {
			   id 'stempler'
			   name 'Simon Templer'
			   email 'simon@templer.cc'
		   }
	   }
   }
}

// sign all artifacts
signing {
	required {
		// NOTE: skipping does only work if no gradle properties specifying the key are present
		gradle.taskGraph.hasTask('uploadArchives')
	}
	sign configurations.archives
}

// groovydoc task work-around

configurations {
	jansi.extendsFrom(runtime)
}
groovydoc {
	groovyClasspath = project.configurations.jansi
}
dependencies {
	jansi 'org.fusesource.jansi:jansi:1.11'
}


publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId "${group}"
            artifactId 'bnd-platform'
            version "${version}"
        }
    }
}

